#Q12 기둥과 보 설치

# [문제]
# 기둥과 보를 이용하여 벽면 구조물을 자동으로 세우는 로봇을 개발할 계획이다. 그에 앞서 로봇의 동작을 시뮬레이션 할 수 있는 프로그램을 만들고 있다.
# 프로그램은 2차원 가상 벽면에 기둥과 보를 이용한 구조물을 설치할 수 있는데, 기둥과 보는 길이가 1인 선분으로 표현되며 다음과 같은 규칙을 가지고 있다.
# - 기둥은 바닥위에 있거나 보의 한쪽 끝부분 위에 있거나, 또는 다른 기둥 위에 있어야한다.
# - 보는 한쪽 끝부분이 기둥 위에 있거나, 또는 양쪽 끝부분이 다른른 보와 동시에 연결되어 있어야 한다.

# 단, 바닥은 벽면의 맨 아래 지면을 말한다.

# 2차원 벽면은 n*n크기 정사각 격자 형태이며, 각 격자는 1*1크기이다. 
# 맨 처음 벽면은 비어 있는 상태이다.
# 기둥과 보는 격자 선의 교차점에 걸치지 않고, 격자 칸의 각 변에 정확히 일치하도록 설치할 수 있다.

# 벽면크기 n, 기둥과 보를 설치하거나 삭제하는 작업이 순서대로 담긴 2차원 배열 build_frame이 매개 변수로 주어질 때, 모든 명령어를 수행한 후 후주물의 상태를 return 하도록 solution 함수를 완성하세요.
# build_frame = [x,y,a,b]
# x,y는 기둥, 보를 설치 또는 삭제할 교차점의 좌표이며 [가로,세로]형태이다
# a는 설치 또는 삭제할 구조물의 종류를 나타내며 0은 기둥 1은 보
# b는 설치 또는 삭제를 나타내며 0은 삭제 1은 설치

# [입력]
# n   build_frame                                 result

# 5   [[1,0,0,1],[1,1,1,1],[2,1,0,1],[2,2,1,1],   [[1,0,0],[1,1,1],[2,1,0],[2,2,1],[3,2,1],[4,2,1],[5,0,0],[5,1,0]]
#      [5,0,0,1],[5,1,0,1],[4,2,1,1],[3,2,1,1]]   [[0,0,0],[0,1,1],[1,1,1],[2,1,1],[3,1,1],[4,0,0]]

# 5   [[0,0,0,1],[2,0,0,1],[4,0,0,1],[0,1,1,1],
#     [1,1,1,1],[2,1,1,1],[3,1,1,1],[2,0,0,0],
#     [1,1,1,0],[2,2,0,1]]

#기둥 설치
#1. 맨밑인 경우
#2. 아래 기둥이 있는 경우
#3. 왼쪽에 보가 있는 경우
#4. 해당 지점에 보가 있는 경우
#보 설치
#1. 아래 기둥이 있는 경우
#2. 오른쪽에 기둥이 있는 경우
#3. 양옆에 보가 있는 경우

def possible(value):
    for x,y,a in value:
        #기둥이 설치되어 있는경우
        if a == 0:
            #바닥위 또는 보의 끝위 또는 다른 기둥 위일 경우 설치가능
            if y == 0 or [x-1,y,1] in value or [x,y,1] in value or [x,y-1,0] in value:
                continue
            return False
        #보가 설치되어 있는경우
        elif a == 1:
            #한쪽 끝이 기둥 위 또는 양쪽 끝이 다른 보와 연결일 경우 설치가능
            if [x,y-1,0] in value or [x+1,y-1,0] in value or ([x-1,y,1] in value and [x+1,y,1] in value):
                continue
            return False
    return True
    
def solution(n, build_frame):
    answer = []
    
    for x,y,a,b in build_frame:
        #삭제하는 경우
        if b == 0:
            answer.remove([x,y,a])
            #삭제 불가능일 경우 다시 추가
            if possible(answer) == False:
                answer.append([x,y,a])
        
        #설치하는 경우
        if b == 1:
            answer.append([x,y,a])
            #설치 불가능일 경우 다시 제거
            if possible(answer) == False:
                answer.remove([x,y,a])    
                
    return sorted(answer)